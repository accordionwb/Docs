function New_C=fun_rule2D_loop(C,Obst,parameter)
% fun_rule returns a New value field based on Cellular automata local rule
% Input C is the value field to be calculated
% Input parameter is an object contains all neede parameters.

%% Parameter initilization
IJ=parameter.IJ;
I=IJ(1);
J=IJ(2);
ii=2:I-1;
jj=2:J-1;
Dt=parameter.Dt;
Dspace=parameter.Dspace;
U=parameter.U  ;%m/s
theta=parameter.theta; % degree, positive wind speed value point to center
S=parameter.Source; % Source release rate

% calculate 8 direction wind parameters
utemp=[-U*cos(theta),U*cos(theta),U*sin(theta),-U*sin(theta),U*sin(theta-pi/4),-U*sin(theta-pi/4),...
    U*cos(theta-pi/4),-U*cos(theta-pi/4)];
uo=abs(utemp);  % wind speed upon obstacles
ud=(utemp+abs(utemp))/2;
wc=parameter.wc;  % adjoint influence coefficient
dispersion=parameter.dispersion;  % if dispersion is considered

% dispersion coefficient
Kz=parameter.Kz; % vertical turbulence cofficient kz', kz''
Kx=parameter.Kx;
Ky=parameter.Ky;
Kxy=parameter.Kxy;

% deposition and reaction
delta=parameter.delta;   % deposition
lambda=parameter.lambda;  % reaction

%% Function body
if dispersion == 0
    for i=ii
        for j=jj
            
            if Obst(i,j)==0
%                 disp(['Obst ',num2str(i),',',num2str(j),' = ',num2str(Obst(i,j))])
                New_C(i,j)=C(i,j)+...
                    wc(1)*Dt/Dspace*(ud(1)*(C(i,j-1)-C(i,j))+...
                    ud(2)*(C(i,j+1)-C(i,j))+ud(3)*(C(i+1,j)-C(i,j))+...
                    ud(4)*(C(i-1,j)-C(i,j))) + ...
                    wc(2)*Dt/Dspace/sqrt(2)*(ud(5)*(C(i+1,j-1)-C(i,j))+...
                    ud(6)*(C(i-1,j+1)-C(i,j))+ ...
                    ud(7)*(C(i+1,j+1)-C(i,j))+...
                    ud(8)*(C(i-1,j-1)-C(i,j)))+ ...
                    Dt*(-delta(i,j).*C(i,j)-lambda(i,j).*C(i,j)+S(i,j));
                
            elseif Obst(i,j)==73
                New_C(i,j)=C(i,j)+...
                    wc(1)*Dt/Dspace*(uo(1)*(C(i,j-1)-C(i,j))+...
                    uo(2)*(C(i,j+1)-C(i,j))+uo(3)*(C(i-1,j)-C(i,j))+...
                    uo(4)*(C(i-1,j)-C(i,j))) + ...
                    wc(2)*Dt/Dspace/sqrt(2)*(uo(5)*(C(i-1,j-1)-C(i,j))+...
                    uo(6)*(C(i-1,j+1)-C(i,j))+ ...
                    uo(7)*(C(i-1,j+1)-C(i,j))+...
                    uo(8)*(C(i-1,j-1)-C(i,j)))+ ...
                    Dt*(-delta(i,j).*C(i,j)-lambda(i,j).*C(i,j)+S(i,j));
                
            elseif Obst(i,j)==1
                New_C(i,j)=0;
                
            elseif Obst(i,j)==7
                New_C(i,j)=C(i,j)+...
                    wc(1)*Dt/Dspace*(uo(1)*(C(i,j+1)-C(i,j))+...
                    uo(2)*(C(i,j+1)-C(i,j))+uo(3)*(C(i+1,j)-C(i,j))+...
                    uo(4)*(C(i-1,j)-C(i,j))) + ...
                    wc(2)*Dt/Dspace/sqrt(2)*(uo(5)*(C(i+1,j+1)-C(i,j))+...
                    uo(6)*(C(i-1,j+1)-C(i,j))+ ...
                    uo(7)*(C(i+1,j+1)-C(i,j))+...
                    uo(8)*(C(i-1,j+1)-C(i,j)))+ ...
                    Dt*(-delta(i,j).*C(i,j)-lambda(i,j).*C(i,j)+S(i,j));
                
                
            elseif Obst(i,j)==5
                New_C(i,j)=0;
                
            elseif Obst(i,j)==292
              New_C(i,j)=C(i,j)+...
                    wc(1)*Dt/Dspace*(uo(1)*(C(i,j-1)-C(i,j))+...
                    uo(2)*(C(i,j+1)-C(i,j))+uo(3)*(C(i+1,j)-C(i,j))+...
                    uo(4)*(C(i+1,j)-C(i,j))) + ...
                    wc(2)*Dt/Dspace/sqrt(2)*(uo(5)*(C(i+1,j-1)-C(i,j))+...
                    uo(6)*(C(i+1,j+1)-C(i,j))+ ...
                    uo(7)*(C(i+1,j+1)-C(i,j))+...
                    uo(8)*(C(i+1,j-1)-C(i,j)))+ ...
                    Dt*(-delta(i,j).*C(i,j)-lambda(i,j).*C(i,j)+S(i,j));
                
            elseif Obst(i,j)==256
                New_C(i,j)=0;
                
            elseif Obst(i,j)==448
                New_C(i,j)=C(i,j)+...
                    wc(1)*Dt/Dspace*(uo(1)*(C(i,j-1)-C(i,j))+...
                    uo(2)*(C(i,j-1)-C(i,j))+uo(3)*(C(i+1,j)-C(i,j))+...
                    uo(4)*(C(i-1,j)-C(i,j))) + ...
                    wc(2)*Dt/Dspace/sqrt(2)*(uo(5)*(C(i+1,j-1)-C(i,j))+...
                    uo(6)*(C(i-1,j-1)-C(i,j))+ ...
                    uo(7)*(C(i+1,j-1)-C(i,j))+...
                    uo(8)*(C(i-1,j-1)-C(i,j)))+ ...
                    Dt*(-delta(i,j).*C(i,j)-lambda(i,j).*C(i,j)+S(i,j));
                
            elseif Obst(i,j)==64
                New_C(i,j)=0;
                
            else
                
                New_C(i,j)=0;
            end
        end
    end
    
    %%% Domain Boundary Conditions
    % Edge I
    New_C(ii,1)=wc(1)*Dt/Dspace*(ud(2)*(C(ii,2)-C(ii,1))+...
        ud(3)*(C(ii+1,1)-C(ii,1))+ud(4)*(C(ii-1,1)-C(ii,1)))+...
        wc(2)*Dt/sqrt(2)/Dspace*(ud(6)*(C(ii-1,2)-C(ii,1))+...
        ud(7)*(C(ii+1,2)-C(ii,1)))+C(ii,1)+...
        Dt*(-delta(ii,1).*C(ii,1)-lambda(ii,1).*C(ii,1)+S(ii,1));
    
    % Edge II
    New_C(ii,J)=wc(1)*Dt/Dspace*(ud(1)*(C(ii,J-1)-C(ii,J))+...
        ud(3)*(C(ii+1,J)-C(ii,J))+ud(4)*(C(ii-1,J)-C(ii,J)))+...
        wc(2)*Dt/sqrt(2)/Dspace*(ud(5)*(C(ii+1,J-1)-C(ii,J))+...
        ud(8)*(C(ii-1,J-1)-C(ii,J)))+C(ii,J)+...
        Dt*(-delta(ii,J).*C(ii,J)-lambda(ii,J).*C(ii,J)+S(ii,J));
    
    % Edge III
    New_C(1,jj)=wc(1)*Dt/Dspace*(ud(1)*(C(1,jj-1)-C(1,jj))+...
        ud(2)*(C(1,jj+1)-C(1,jj))+ud(3)*(C(2,jj)-C(1,jj)))+...
        wc(2)*Dt/sqrt(2)/Dspace*(ud(5)*(C(2,jj-1)-C(1,jj))+...
        ud(7)*(C(2,jj+1)-C(1,jj)))+C(1,jj)+...
        Dt*(-delta(1,jj).*C(1,jj)-lambda(1,jj).*C(1,jj)+S(1,jj));
    % Edge IV
    New_C(I,jj)=wc(1)*Dt/Dspace*(ud(1)*(C(I,jj-1)-C(I,jj))+...
        ud(2)*(C(I,jj+1)-C(I,jj))+ud(4)*(C(I-1,jj)-C(I,jj)))+...
        wc(2)*Dt/sqrt(2)/Dspace*(ud(6)*(C(I-1,jj+1)-C(I,jj))+...
        ud(8)*(C(I-1,jj-1)-C(I,jj)))+C(I,jj)+...
        Dt*(-delta(I,jj).*C(I,jj)-lambda(I,jj).*C(I,jj)+S(I,jj));
    % Corner A
    New_C(1,1)=wc(1)*Dt/Dspace*(ud(2)*(C(1,2)-C(1,1))+ud(3)*(C(2,1)-C(1,1)))+...
        wc(2)*Dt/sqrt(2)/Dspace*ud(7)*(C(2,2)-C(1,1))+C(1,1)+...
        Dt*(-delta(1,1)*C(1,1)-lambda(1,1)*C(1,1)+S(1,1));
    % Corner B
    New_C(I,1)=wc(1)*Dt/Dspace*(ud(2)*(C(I,2)-C(I,1))+ud(4)*(C(I-1,1)-C(I,1)))+...
        wc(2)*Dt/sqrt(2)/Dspace*ud(6)*(C(I-1,2)-C(I,1))+C(I,1)+...
        Dt*(-delta(I,1)*C(I,1)-lambda(I,1)*C(I,1)+S(I,1));
    % Corner C
    New_C(1,J)=wc(1)*Dt/Dspace*(ud(1)*(C(1,J-1)-C(1,J))+ud(3)*(C(2,J)-C(1,J)))+...
        wc(2)*Dt/sqrt(2)/Dspace*ud(5)*(C(2,J-1)-C(1,J))+C(1,J)+...
        Dt*(-delta(1,J)*C(1,J)-lambda(1,J)*C(1,J)+S(1,J));
    % Corner D
    New_C(I,J)=wc(1)*Dt/Dspace*(ud(1)*(C(I,J-1)-C(I,J))+ud(4)*(C(I-1,J)-C(I,J)))+...
        wc(2)*Dt/sqrt(2)/Dspace*ud(5)*(C(I-1,J-1)-C(I,J))+C(I,J)+...
        Dt*(-delta(I,J)*C(I,J)-lambda(I,J)*C(I,J)+S(I,J));
    
    
elseif dispersion ==1
    %%% Main body
    for i=ii
        for j=jj
            New_C(i,j)=C(i,j)+...
                Kx*Dt/Dspace^2*(C(i+1,j)-2*C(i,j)+C(i-1,j))+...
                Ky*Dt/Dspace^2*(C(i,j+1)-2*C(i,j)+C(i,j-1))+...
                Kxy*Dt/2/Dspace^2*(C(i-1,j+1)-2*C(i,j)+C(i+1,j-1))+...
                Kxy*Dt/2/Dspace^2*(C(i-1,j-1)-2*C(i,j)+C(i+1,j+1))+...
                wc(1)*Dt/Dspace*(ud(1)*(C(i,j-1)-C(i,j))+...
                ud(2)*(C(i,j+1)-C(i,j))+ud(3)*(C(i+1,j)-C(i,j))+...
                ud(4)*(C(i-1,j)-C(i,j))) + ...
                wc(2)*Dt/Dspace/sqrt(2)*(ud(5)*(C(i+1,j-1)-C(i,j))+...
                ud(6)*(C(i-1,j+1)-C(i,j))+ud(7)*(C(i+1,j+1)-C(i,j))+...
                ud(8)*(C(i-1,j-1)-C(i,j)))+ ...
                Dt*(-delta(i,j).*C(i,j)-lambda(i,j).*C(i,j)+S(i,j));
        end
    end
    
    %%% Boundary Conditions
    % Edge I
    New_C(ii,1)=Kx*Dt/Dspace^2*(C(ii+1,1)-2*C(ii,1)+C(ii-1,1))+...
        Kx*Dt/Dspace^2*(C(ii,2)-2*C(ii,1))+...
        Kxy*Dt/2/Dspace^2*(C(ii-1,2)-2*C(ii,1)-2*C(ii,1)+C(ii+1,2))+...
        wc(1)*Dt/Dspace*(ud(2)*(C(ii,2)-C(ii,1))+...
        ud(3)*(C(ii+1,1)-C(ii,1))+ud(4)*(C(ii-1,1)-C(ii,1)))+...
        wc(2)*Dt/sqrt(2)/Dspace*(ud(6)*(C(ii-1,2)-C(ii,1))+...
        ud(7)*(C(ii+1,2)-C(ii,1)))+C(ii,1)+...
        Dt*(-delta(ii,1).*C(ii,1)-lambda(ii,1).*C(ii,1)+S(ii,1));
    
    % Edge II
    New_C(ii,J)=Kx*Dt/Dspace^2*(C(ii+1,J)-2*C(ii,J)+C(ii-1,J))+...
        Ky*Dt/Dspace^2*(-2*C(ii,J)+C(ii,J-1))+...
        Kxy*Dt/Dspace^2/2*(-2*C(ii,J)+C(ii+1,J-1)+C(ii-1,J-1)-2*C(ii,J))+...
        wc(1)*Dt/Dspace*(ud(1)*(C(ii,J-1)-C(ii,J))+...
        ud(3)*(C(ii+1,J)-C(ii,J))+ud(4)*(C(ii-1,J)-C(ii,J)))+...
        wc(2)*Dt/sqrt(2)/Dspace*(ud(5)*(C(ii+1,J-1)-C(ii,J))+...
        ud(8)*(C(ii-1,J-1)-C(ii,J)))+C(ii,J)+...
        Dt*(-delta(ii,J).*C(ii,J)-lambda(ii,J).*C(ii,J)+S(ii,J));
    
    % Edge III
    New_C(1,jj)=Kx*Dt/Dspace^2*(C(2,jj)-2*C(1,jj))+...
        Ky*Dt/Dspace^2*(C(1,jj+1)-2*C(1,jj)+C(1,jj-1))+...
        Kxy*Dt/Dspace^2/2*(-2*C(1,jj)+C(2,jj-1)+C(2,jj+1)-2*C(1,jj))+...
        wc(1)*Dt/Dspace*(ud(1)*(C(1,jj-1)-C(1,jj))+...
        ud(2)*(C(1,jj+1)-C(1,jj))+ud(3)*(C(2,jj)-C(1,jj)))+...
        wc(2)*Dt/sqrt(2)/Dspace*(ud(5)*(C(2,jj-1)-C(1,jj))+...
        ud(7)*(C(2,jj+1)-C(1,jj)))+C(1,jj)+...
        Dt*(-delta(1,jj).*C(1,jj)-lambda(1,jj).*C(1,jj)+S(1,jj));
    % Edge IV
    New_C(I,jj)=Kx*Dt/Dspace^2*(C(I-1,jj)-2*C(I,jj))+...
        Ky*Dt/Dspace^2*(C(I,jj+1)-2*C(I,jj)+C(I,jj-1))+...
        Kxy*Dt/Dspace^2/2*(-2*C(I,jj)+C(I-1,jj+1)+C(I-1,jj-1)-2*C(I,jj))+...
        wc(1)*Dt/Dspace*(ud(1)*(C(I,jj-1)-C(I,jj))+...
        ud(2)*(C(I,jj+1)-C(I,jj))+ud(4)*(C(I-1,jj)-C(I,jj)))+...
        wc(2)*Dt/sqrt(2)/Dspace*(ud(6)*(C(I-1,jj+1)-C(I,jj))+...
        ud(8)*(C(I-1,jj-1)-C(I,jj)))+C(I,jj)+...
        Dt*(-delta(I,jj).*C(I,jj)-lambda(I,jj).*C(I,jj)+S(I,jj));
    % Corner A
    New_C(1,1)=Kx*Dt/Dspace^2*(C(2,1)-2*C(1,1)+C(1,2)-2*C(1,1))+...
        Kxy*Dt/2/Dspace^2*(-2*C(1,1)-2*C(1,1)+C(2,2))+...
        wc(1)*Dt/Dspace*(ud(2)*(C(1,2)-C(1,1))+ud(3)*(C(2,1)-C(1,1)))+...
        wc(2)*Dt/sqrt(2)/Dspace*ud(7)*(C(2,2)-C(1,1))+C(1,1)+...
        Dt*(-delta(1,1)*C(1,1)-lambda(1,1)*C(1,1)+S(1,1));
    % Corner B
    New_C(I,1)=Kx*Dt/Dspace^2*(C(I-1,1)-2*C(I,1)+C(I,2)-2*C(I,1))+...
        Kxy*Dt/2/Dspace^2*(-2*C(I,1)-2*C(I,1)+C(I-1,2))+...
        wc(1)*Dt/Dspace*(ud(2)*(C(I,2)-C(I,1))+ud(4)*(C(I-1,1)-C(I,1)))+...
        wc(2)*Dt/sqrt(2)/Dspace*ud(6)*(C(I-1,2)-C(I,1))+C(I,1)+...
        Dt*(-delta(I,1)*C(I,1)-lambda(I,1)*C(I,1)+S(I,1));
    % Corner C
    New_C(1,J)=Kx*Dt/Dspace^2*(C(2,J)-2*C(1,J)+C(1,J-1)-2*C(1,J))+...
        Kxy*Dt/2/Dspace^2*(-2*C(1,J)-2*C(1,J)+C(2,J-1))+...
        wc(1)*Dt/Dspace*(ud(1)*(C(1,J-1)-C(1,J))+ud(3)*(C(2,J)-C(1,J)))+...
        wc(2)*Dt/sqrt(2)/Dspace*ud(5)*(C(2,J-1)-C(1,J))+C(1,J)+...
        Dt*(-delta(1,J)*C(1,J)-lambda(1,J)*C(1,J)+S(1,J));
    % Corner D
    New_C(I,J)=Kx*Dt/Dspace^2*(C(I-1,J)-2*C(I,J)+C(I,J-1)-2*C(I,J))+...
        Kxy*Dt/2/Dspace^2*(-2*C(I,J)-2*C(I,J)+C(I-1,J-1))+...
        wc(1)*Dt/Dspace*(ud(1)*(C(I,J-1)-C(I,J))+ud(4)*(C(I-1,J)-C(I,J)))+...
        wc(2)*Dt/sqrt(2)/Dspace*ud(5)*(C(I-1,J-1)-C(I,J))+C(I,J)+...
        Dt*(-delta(I,J)*C(I,J)-lambda(I,J)*C(I,J)+S(I,J));
end

% Execute Obst
% for i=1:M
%     New_C(Obstidx{i,1},Obstidx{i,2})=0;
% end
